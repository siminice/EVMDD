%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (RAWheless) (NASA Langley)
%%Title: (B/W.NASA.MB.eps)
%%CreationDate: (5/13/97) (3:45 PM)
%%BoundingBox: 208 326 396 481
%%HiResBoundingBox: 208.787 326.1025 395.713 480.8975
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -306 828 -1.5 826 581 58 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
0 XR
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
u
0 O
0 g
800 Ar
0 J 0 j 0 w 4 M []0 d
%AI3_Note:
0 D
0 XR
372.828 403.5005 m
372.828 361.0445 337.886 326.1025 295.431 326.1025 c
252.976 326.1025 218.034 361.0445 218.034 403.5005 c
218.034 445.9555 252.976 480.8975 295.431 480.8975 c
337.886 480.8975 372.828 445.9555 372.828 403.5005 c
f
0.65 g
0.539 w
210.825 380.0735 m
254.163 405.4205 340.541 401.8915 381.858 453.6835 c
385.413 458.1395 393.1 468.4865 395.63 473.6625 c
386.795 459.6875 364.877 445.2395 350.046 437.7775 c
319.591 422.4525 294.765 415.1215 261.786 404.2185 c
238.314 396.4595 224.448 390.0835 209.899 380.3845 c
210.825 380.0735 l
f
1 g
0 w
296.498 473.8655 m
296.498 473.5195 296.213 473.2355 295.867 473.2355 c
295.522 473.2355 295.237 473.5195 295.237 473.8655 c
295.237 474.2115 295.522 474.4955 295.867 474.4955 c
296.213 474.4955 296.498 474.2115 296.498 473.8655 c
f
300.862 464.3125 m
300.862 463.8865 300.512 463.5365 300.086 463.5365 c
299.661 463.5365 299.311 463.8865 299.311 464.3125 c
299.311 464.7375 299.661 465.0875 300.086 465.0875 c
300.512 465.0875 300.862 464.7375 300.862 464.3125 c
f
312.21 448.6965 m
312.21 448.2715 311.86 447.9205 311.434 447.9205 c
311.009 447.9205 310.658 448.2715 310.658 448.6965 c
310.658 449.1225 311.009 449.4725 311.434 449.4725 c
311.86 449.4725 312.21 449.1225 312.21 448.6965 c
f
293.976 458.9295 m
293.976 458.5835 293.692 458.2985 293.346 458.2985 c
293 458.2985 292.715 458.5835 292.715 458.9295 c
292.715 459.2745 293 459.5595 293.346 459.5595 c
293.692 459.5595 293.976 459.2745 293.976 458.9295 c
f
300.765 455.3405 m
300.765 454.9945 300.481 454.7105 300.135 454.7105 c
299.789 454.7105 299.505 454.9945 299.505 455.3405 c
299.505 455.6865 299.789 455.9715 300.135 455.9715 c
300.481 455.9715 300.765 455.6865 300.765 455.3405 c
f
291.939 465.3785 m
291.939 464.9535 291.589 464.6035 291.164 464.6035 c
290.738 464.6035 290.388 464.9535 290.388 465.3785 c
290.388 465.8045 290.738 466.1545 291.164 466.1545 c
291.589 466.1545 291.939 465.8045 291.939 465.3785 c
f
281.659 459.1235 m
281.659 458.7775 281.374 458.4925 281.028 458.4925 c
280.682 458.4925 280.398 458.7775 280.398 459.1235 c
280.398 459.4685 280.682 459.7535 281.028 459.7535 c
281.374 459.7535 281.659 459.4685 281.659 459.1235 c
f
283.501 457.8625 m
283.501 457.5165 283.217 457.2315 282.871 457.2315 c
282.525 457.2315 282.241 457.5165 282.241 457.8625 c
282.241 458.2085 282.525 458.4925 282.871 458.4925 c
283.217 458.4925 283.501 458.2085 283.501 457.8625 c
f
285.344 456.6015 m
285.344 456.2555 285.06 455.9715 284.714 455.9715 c
284.368 455.9715 284.083 456.2555 284.083 456.6015 c
284.083 456.9475 284.368 457.2315 284.714 457.2315 c
285.06 457.2315 285.344 456.9475 285.344 456.6015 c
f
282.531 454.1765 m
282.531 453.8305 282.247 453.5465 281.901 453.5465 c
281.555 453.5465 281.271 453.8305 281.271 454.1765 c
281.271 454.5225 281.555 454.8075 281.901 454.8075 c
282.247 454.8075 282.531 454.5225 282.531 454.1765 c
f
267.886 443.8955 m
267.886 443.5505 267.602 443.2655 267.256 443.2655 c
266.91 443.2655 266.625 443.5505 266.625 443.8955 c
266.625 444.2415 266.91 444.5265 267.256 444.5265 c
267.602 444.5265 267.886 444.2415 267.886 443.8955 c
f
270.602 440.5985 m
270.602 440.2525 270.317 439.9675 269.972 439.9675 c
269.626 439.9675 269.341 440.2525 269.341 440.5985 c
269.341 440.9445 269.626 441.2285 269.972 441.2285 c
270.317 441.2285 270.602 440.9445 270.602 440.5985 c
f
268.468 387.3515 m
268.468 387.0055 268.184 386.7205 267.838 386.7205 c
267.492 386.7205 267.207 387.0055 267.207 387.3515 c
267.207 387.6975 267.492 387.9815 267.838 387.9815 c
268.184 387.9815 268.468 387.6975 268.468 387.3515 c
f
268.856 372.6575 m
268.856 372.2315 268.506 371.8815 268.08 371.8815 c
267.655 371.8815 267.304 372.2315 267.304 372.6575 c
267.304 373.0835 267.655 373.4335 268.08 373.4335 c
268.506 373.4335 268.856 373.0835 268.856 372.6575 c
f
260.515 365.1405 m
260.515 364.7955 260.23 364.5105 259.885 364.5105 c
259.539 364.5105 259.254 364.7955 259.254 365.1405 c
259.254 365.4865 259.539 365.7715 259.885 365.7715 c
260.23 365.7715 260.515 365.4865 260.515 365.1405 c
f
250.525 362.0855 m
250.525 361.6605 250.175 361.3095 249.749 361.3095 c
249.324 361.3095 248.973 361.6605 248.973 362.0855 c
248.973 362.5115 249.324 362.8615 249.749 362.8615 c
250.175 362.8615 250.525 362.5115 250.525 362.0855 c
f
248.488 368.8745 m
248.488 368.4495 248.138 368.0995 247.713 368.0995 c
247.287 368.0995 246.937 368.4495 246.937 368.8745 c
246.937 369.3005 247.287 369.6505 247.713 369.6505 c
248.138 369.6505 248.488 369.3005 248.488 368.8745 c
f
247.325 364.5595 m
247.325 364.2135 247.04 363.9285 246.694 363.9285 c
246.348 363.9285 246.064 364.2135 246.064 364.5595 c
246.064 364.9045 246.348 365.1895 246.694 365.1895 c
247.04 365.1895 247.325 364.9045 247.325 364.5595 c
f
239.856 368.1475 m
239.856 367.8015 239.572 367.5175 239.226 367.5175 c
238.88 367.5175 238.595 367.8015 238.595 368.1475 c
238.595 368.4935 238.88 368.7785 239.226 368.7785 c
239.572 368.7785 239.856 368.4935 239.856 368.1475 c
f
265.946 356.0235 m
265.946 355.6785 265.662 355.3935 265.316 355.3935 c
264.97 355.3935 264.686 355.6785 264.686 356.0235 c
264.686 356.3695 264.97 356.6545 265.316 356.6545 c
265.662 356.6545 265.946 356.3695 265.946 356.0235 c
f
273.803 361.7945 m
273.803 361.3695 273.452 361.0185 273.027 361.0185 c
272.601 361.0185 272.251 361.3695 272.251 361.7945 c
272.251 362.2205 272.601 362.5705 273.027 362.5705 c
273.452 362.5705 273.803 362.2205 273.803 361.7945 c
f
274.675 354.3755 m
274.675 354.0295 274.391 353.7445 274.045 353.7445 c
273.699 353.7445 273.415 354.0295 273.415 354.3755 c
273.415 354.7205 273.699 355.0055 274.045 355.0055 c
274.391 355.0055 274.675 354.7205 274.675 354.3755 c
f
306.973 361.4555 m
306.973 361.1095 306.688 360.8245 306.342 360.8245 c
305.996 360.8245 305.712 361.1095 305.712 361.4555 c
305.712 361.8015 305.996 362.0855 306.342 362.0855 c
306.688 362.0855 306.973 361.8015 306.973 361.4555 c
f
291.939 356.1205 m
291.939 355.7755 291.655 355.4905 291.309 355.4905 c
290.963 355.4905 290.679 355.7755 290.679 356.1205 c
290.679 356.4665 290.963 356.7515 291.309 356.7515 c
291.655 356.7515 291.939 356.4665 291.939 356.1205 c
f
332.384 348.4585 m
332.384 348.1125 332.099 347.8285 331.753 347.8285 c
331.408 347.8285 331.123 348.1125 331.123 348.4585 c
331.123 348.8045 331.408 349.0895 331.753 349.0895 c
332.099 349.0895 332.384 348.8045 332.384 348.4585 c
f
335.681 378.2825 m
335.681 377.8575 335.331 377.5075 334.905 377.5075 c
334.48 377.5075 334.13 377.8575 334.13 378.2825 c
334.13 378.7085 334.48 379.0585 334.905 379.0585 c
335.331 379.0585 335.681 378.7085 335.681 378.2825 c
f
329.474 374.0635 m
329.474 373.7185 329.19 373.4335 328.844 373.4335 c
328.498 373.4335 328.213 373.7185 328.213 374.0635 c
328.213 374.4095 328.498 374.6945 328.844 374.6945 c
329.19 374.6945 329.474 374.4095 329.474 374.0635 c
f
335.585 372.8515 m
335.585 372.4255 335.234 372.0755 334.809 372.0755 c
334.383 372.0755 334.033 372.4255 334.033 372.8515 c
334.033 373.2775 334.383 373.6275 334.809 373.6275 c
335.234 373.6275 335.585 373.2775 335.585 372.8515 c
f
329.474 365.3345 m
329.474 364.9895 329.19 364.7045 328.844 364.7045 c
328.498 364.7045 328.213 364.9895 328.213 365.3345 c
328.213 365.6805 328.498 365.9655 328.844 365.9655 c
329.19 365.9655 329.474 365.6805 329.474 365.3345 c
f
345.283 382.5015 m
345.283 382.1565 344.999 381.8715 344.653 381.8715 c
344.307 381.8715 344.022 382.1565 344.022 382.5015 c
344.022 382.8475 344.307 383.1325 344.653 383.1325 c
344.999 383.1325 345.283 382.8475 345.283 382.5015 c
f
346.835 378.6705 m
346.835 378.2455 346.485 377.8945 346.059 377.8945 c
345.634 377.8945 345.283 378.2455 345.283 378.6705 c
345.283 379.0965 345.634 379.4465 346.059 379.4465 c
346.485 379.4465 346.835 379.0965 346.835 378.6705 c
f
357.698 374.1125 m
357.698 373.6865 357.348 373.3365 356.922 373.3365 c
356.496 373.3365 356.146 373.6865 356.146 374.1125 c
356.146 374.5375 356.496 374.8885 356.922 374.8885 c
357.348 374.8885 357.698 374.5375 357.698 374.1125 c
f
346.641 366.0135 m
346.641 365.6675 346.357 365.3835 346.011 365.3835 c
345.665 365.3835 345.38 365.6675 345.38 366.0135 c
345.38 366.3595 345.665 366.6445 346.011 366.6445 c
346.357 366.6445 346.641 366.3595 346.641 366.0135 c
f
353.624 372.6095 m
353.624 372.2635 353.34 371.9785 352.994 371.9785 c
352.648 371.9785 352.364 372.2635 352.364 372.6095 c
352.364 372.9545 352.648 373.2395 352.994 373.2395 c
353.34 373.2395 353.624 372.9545 353.624 372.6095 c
f
352.364 362.4255 m
352.364 362.0795 352.079 361.7945 351.733 361.7945 c
351.387 361.7945 351.103 362.0795 351.103 362.4255 c
351.103 362.7715 351.387 363.0555 351.733 363.0555 c
352.079 363.0555 352.364 362.7715 352.364 362.4255 c
f
u
355.297 379.3495 m
355.297 378.8175 354.86 378.3795 354.328 378.3795 c
353.795 378.3795 353.358 378.8175 353.358 379.3495 c
353.358 379.8815 353.795 380.3195 354.328 380.3195 c
354.86 380.3195 355.297 379.8815 355.297 379.3495 c
f
U
u
348.508 362.4735 m
348.508 361.9415 348.07 361.5035 347.538 361.5035 c
347.006 361.5035 346.568 361.9415 346.568 362.4735 c
346.568 363.0055 347.006 363.4435 347.538 363.4435 c
348.07 363.4435 348.508 363.0055 348.508 362.4735 c
f
U
u
276.154 442.5865 m
276.154 442.0545 275.717 441.6165 275.185 441.6165 c
274.653 441.6165 274.215 442.0545 274.215 442.5865 c
274.215 443.1185 274.653 443.5565 275.185 443.5565 c
275.717 443.5565 276.154 443.1185 276.154 442.5865 c
f
U
u
312.234 466.0575 m
312.234 465.5255 311.797 465.0875 311.264 465.0875 c
310.732 465.0875 310.295 465.5255 310.295 466.0575 c
310.295 466.5895 310.732 467.0275 311.264 467.0275 c
311.797 467.0275 312.234 466.5895 312.234 466.0575 c
f
U
u
268.395 346.9555 m
268.395 346.4235 267.957 345.9855 267.425 345.9855 c
266.893 345.9855 266.456 346.4235 266.456 346.9555 c
266.456 347.4875 266.893 347.9255 267.425 347.9255 c
267.957 347.9255 268.395 347.4875 268.395 346.9555 c
f
U
0.65 g
0.539 w
323.293 405.9185 m
F
1 g
324.488 406.9665 m
326.275 403.9325 l
327.286 404.5385 l
325.297 407.8435 l
324.488 406.9665 l
f
324.488 406.9665 m
F
0.65 g
0.307 w
219.92 386.5705 m
215.755 384.5255 211.962 382.5075 208.787 380.5365 c
210.748 379.8235 l
213.614 381.5875 216.696 383.2925 220.334 384.9125 c
F
242.017 347.8055 m
238.145 344.4255 234.201 340.8555 230.186 337.0745 C
230.008 334.4005 l
233.652 338.1535 238.175 342.2425 243.329 346.5385 c
F
0.539 w
323.293 405.9185 m
302.111 392.6245 l
302.757 389.1065 l
325.647 403.9005 l
323.293 405.9185 l
f
1 g
0.348 w
254.232 399.8315 m
254.232 401.0555 254.232 414.5675 y
251.36 417.4565 l
260.932 417.4565 l
258.06 414.5675 l
258.06 392.4765 l
261.367 389.1565 l
248.793 389.1565 L
237.96 407.4835 L
237.96 406.7835 237.96 392.4765 y
240.744 389.1565 l
230.737 389.1565 l
234.044 392.4765 l
234.044 414.5675 l
231.172 417.4565 l
243.703 417.4565 L
254.232 399.8315 L
f
326.706 410.1985 m
326.412 419.0095 l
323.446 416.9625 L
319.267 418.4235 314.405 418.3685 310.993 416.7535 c
307.817 415.2505 304.39 412.0775 304.808 407.5675 c
305.226 403.0585 308.721 401.3135 311.871 399.8855 c
315.924 398.0485 320.336 397.4265 320.27 395.0005 c
320.228 393.4555 317.665 392.3485 315.673 392.4115 c
313.855 392.4695 307.942 392.9125 304.85 396.5875 c
305.435 387.3175 l
308.736 389.7395 L
312.748 388.3205 317.61 387.7255 322.107 389.1915 c
326.579 390.6495 331.278 394.3905 328.67 400.9295 c
327.548 403.7425 324.456 405.4765 322.612 406.2315 c
320.925 406.9225 315.774 408.9485 314.336 409.6975 c
312.656 410.5725 312.844 413.3505 316.885 413.9145 c
320.546 414.4255 325.619 411.4925 326.706 410.1985 C
f
279.016 395.5245 m
284.188 395.5245 l
285.362 392.4765 l
282.056 389.1565 l
300.068 389.1565 l
296.761 392.4765 l
286.842 417.4565 l
273.006 417.4565 l
275.878 414.5675 l
269.504 392.4765 l
266.197 389.1565 l
275.595 389.1565 l
273.224 392.0385 l
274.246 395.5245 l
279.316 395.5245 L
278.229 399.7845 L
278.191 399.8965 L
275.449 399.8965 l
278.423 410.0415 l
282.426 399.8965 l
277.404 399.8965 L
279.016 395.5245 L
f
337.517 403.4335 m
340.962 415.5425 l
337.809 417.4565 l
351.644 417.4565 l
361.564 392.4765 l
364.871 389.1565 l
346.858 389.1565 l
350.165 392.4765 l
348.99 395.5245 l
339.049 395.5245 l
338.026 392.0385 l
340.397 389.1565 l
331 389.1565 l
334.306 392.4765 l
337.554 403.6405 L
341.334 403.3505 L
340.289 399.8965 l
347.228 399.8965 l
343.226 410.0415 l
341.315 403.2945 L
337.517 403.4335 L
f
0.65 g
0.539 w
376.782 448.4945 m
334.333 409.3525 320.339 405.1365 295.732 388.4035 c
283.033 379.7675 261.727 367.6725 240.775 346.6045 c
242.564 345.9285 l
258.065 359.2225 278.276 373.2545 296.963 385.3875 c
336.74 411.2115 383.681 438.3595 395.476 473.3855 c
F
296.964 389.2105 m
298.955 390.5545 l
301.18 389.7795 l
299.447 388.5895 l
296.964 389.2105 l
f
1 g
0.209 w
310.083 466.1095 m
310.19 466.5035 310.509 466.8105 310.91 466.9005 c
311.131 468.5605 l
311.457 466.8845 l
311.846 466.7745 312.147 466.4565 312.234 466.0575 c
313.915 465.8195 l
312.219 465.5215 l
312.112 465.1385 311.804 464.8385 311.416 464.7435 c
311.131 463.0355 l
310.843 464.7565 l
310.465 464.8665 310.171 465.1715 310.077 465.5565 c
308.455 465.8195 l
310.083 466.1095 l
f
266.599 347.1345 m
266.705 347.5285 267.024 347.8355 267.425 347.9255 c
267.646 349.5855 l
267.972 347.9095 l
268.361 347.7985 268.662 347.4805 268.75 347.0825 c
270.43 346.8445 l
268.735 346.5455 l
268.628 346.1625 268.32 345.8635 267.932 345.7685 c
267.646 344.0605 l
267.358 345.7815 l
266.98 345.8915 266.686 346.1965 266.592 346.5805 c
264.971 346.8445 l
266.599 347.1345 l
f
346.568 362.4735 m
346.675 362.8685 346.994 363.1755 347.395 363.2645 c
347.616 364.9245 l
347.942 363.2495 l
348.331 363.1385 348.632 362.8205 348.719 362.4225 c
350.4 362.1845 l
348.704 361.8855 l
348.597 361.5025 348.289 361.2035 347.901 361.1085 c
347.616 359.3995 l
347.328 361.1205 l
346.95 361.2305 346.656 361.5365 346.562 361.9205 c
344.94 362.1845 l
346.568 362.4735 l
f
352.9 379.5795 m
353.006 379.9735 353.325 380.2805 353.726 380.3705 c
353.947 382.0305 l
354.273 380.3545 l
354.662 380.2435 354.963 379.9255 355.051 379.5275 c
356.731 379.2895 l
355.035 378.9915 l
354.928 378.6075 354.621 378.3085 354.232 378.2135 c
353.947 376.5055 l
353.659 378.2265 l
353.281 378.3365 352.987 378.6415 352.893 379.0265 c
351.272 379.2895 l
352.9 379.5795 l
f
274.358 442.7655 m
274.464 443.1595 274.783 443.4665 275.185 443.5565 c
275.405 445.2165 l
275.731 443.5405 l
276.12 443.4295 276.422 443.1115 276.509 442.7135 c
278.19 442.4755 l
276.494 442.1765 l
276.387 441.7935 276.079 441.4945 275.691 441.3995 c
275.405 439.6915 l
275.117 441.4125 l
274.74 441.5225 274.445 441.8275 274.351 442.2125 c
272.73 442.4755 l
274.358 442.7655 l
f
0 g
0.539 w
395.713 473.6255 m
388.155 449.9285 363.87 431.9325 358.262 427.1635 c
358.102 427.0265 358.73 432.5995 359.393 433.0025 c
366.455 437.2895 386.771 455.4375 395.713 473.6255 C
395.713 473.6255 L
f
0.65 g
336.587 414.9705 m
341.967 418.9275 l
346.467 418.2035 l
338.475 412.5395 l
336.587 414.9705 l
f
336.587 414.9705 m
F
1 g
0 w
312.889 362.7645 m
345.865 349.1865 340.24 383.5205 322.588 409.9015 c
312.6 424.8285 299.574 437.2635 291.358 443.2655 c
264.007 463.2455 247.325 451.0245 266.528 411.8415 c
272.749 399.1475 280.739 390.5815 286.98 382.5075 c
291.745 376.3435 301.029 373.2565 297.759 370.3295 c
294.073 367.0325 285.15 381.5805 y
278.555 389.5335 272.275 398.0265 265.802 409.6715 c
251.01 436.2825 253.144 463.4395 279.913 451.6065 c
302.633 441.5635 324.334 413.3925 333.061 393.3875 c
337.105 384.1165 347.999 347.6345 313.083 362.3765 c
F
0.65 g
0.539 w
274.056 408.2405 m
271.84 400.5415 l
271.218 400.3765 l
267.59 406.1455 l
270.797 407.1805 l
274.056 408.2405 l
f
296.964 389.2105 m
284.73 381.0375 l
287.704 383.0285 l
289.903 380.7525 l
286.515 378.4765 l
284.73 381.0375 l
284.73 381.0375 l
F
u
0.3 w
345.664 417.6325 m
343.721 420.2625 L
343.179 419.8595 L
345.123 417.2295 L
345.664 417.6325 L
f
0 g
344.347 418.8585 m
F
U
0.643 g
343.438 420.0665 m
343.979 420.4705 L
345.923 417.8435 L
345.383 417.4395 L
343.438 420.0665 L
f
0.637 g
343.697 420.2745 m
344.237 420.6785 L
346.182 418.0545 L
345.643 417.6495 L
343.697 420.2745 L
f
0.63 g
343.899 420.4445 m
344.439 420.8485 L
346.46 418.1895 L
345.921 417.7845 L
343.899 420.4445 L
f
0.624 g
344.237 420.6785 m
344.777 421.0835 L
346.738 418.3815 L
346.2 417.9755 L
344.237 420.6785 L
f
0.617 g
344.435 420.8585 m
344.974 421.2635 L
346.997 418.5735 L
346.459 418.1665 L
344.435 420.8585 L
f
0.611 g
344.712 421.0475 m
345.251 421.4525 L
347.237 418.7655 L
346.7 418.3575 L
344.712 421.0475 L
f
0.604 g
344.986 421.3015 m
345.525 421.7075 L
347.549 418.9845 L
347.013 418.5765 L
344.986 421.3015 L
f
0.598 g
345.226 421.4705 m
345.765 421.8775 L
347.79 419.1575 L
347.254 418.7485 L
345.226 421.4705 L
f
0.592 g
345.488 421.7075 m
346.026 422.1135 L
348.089 419.3965 L
347.554 418.9865 L
345.488 421.7075 L
f
0.585 g
345.803 421.9145 m
346.341 422.3215 L
348.33 419.5705 L
347.795 419.1595 L
345.803 421.9145 L
f
0.579 g
346.024 422.1225 m
346.562 422.5295 L
348.626 419.7805 L
348.092 419.3695 L
346.024 422.1225 L
f
0.572 g
346.282 422.3105 m
346.82 422.7185 L
348.885 419.9725 L
348.352 419.5605 L
346.282 422.3105 L
f
0.566 g
346.541 422.5365 m
347.078 422.9445 L
349.144 420.1645 L
348.611 419.7515 L
346.541 422.5365 L
f
0.559 g
346.818 422.7065 m
347.355 423.1155 L
349.422 420.3745 L
348.89 419.9615 L
346.818 422.7065 L
f
0.553 g
347.039 422.9335 m
347.576 423.3415 L
349.681 420.5665 L
349.149 420.1525 L
347.039 422.9335 L
f
0.547 g
347.316 423.1215 m
347.853 423.5305 L
349.959 420.7585 L
349.428 420.3435 L
347.316 423.1215 L
f
0.54 g
347.594 423.3295 m
348.13 423.7385 L
350.237 420.9695 L
349.706 420.5535 L
347.594 423.3295 L
f
0.534 g
347.815 423.5365 m
348.351 423.9465 L
350.496 421.1795 L
349.966 420.7635 L
347.815 423.5365 L
f
0.527 g
348.073 423.7445 m
348.609 424.1545 L
350.755 421.3905 L
350.226 420.9735 L
348.073 423.7445 L
f
0.521 g
348.37 423.9515 m
348.905 424.3625 L
351.014 421.5635 L
350.486 421.1455 L
348.37 423.9515 L
f
0.514 g
348.628 424.1215 m
349.163 424.5325 L
351.272 421.7735 L
350.745 421.3555 L
348.628 424.1215 L
f
0.508 g
348.886 424.3665 m
349.421 424.7775 L
351.569 421.9845 L
351.042 421.5655 L
348.886 424.3665 L
f
0.502 g
349.182 424.5735 m
349.717 424.9855 L
351.828 422.1955 L
351.302 421.7755 L
349.182 424.5735 L
f
0.495 g
349.422 424.8005 m
349.957 425.2115 L
352.106 422.3875 L
351.58 421.9665 L
349.422 424.8005 L
f
0.489 g
349.643 424.9695 m
350.178 425.3825 L
352.365 422.5975 L
351.84 422.1765 L
349.643 424.9695 L
f
0.482 g
349.94 425.1965 m
350.473 425.6085 L
352.624 422.7895 L
352.1 422.3675 L
349.94 425.1965 L
f
0.476 g
350.198 425.3665 m
350.732 425.7795 L
352.883 423.0005 L
352.359 422.5775 L
350.198 425.3665 L
f
0.469 g
350.438 425.6105 m
350.971 426.0245 L
353.161 423.2105 L
352.638 422.7865 L
350.438 425.6105 L
f
0.463 g
350.696 425.7805 m
351.229 426.1945 L
353.42 423.4215 L
352.897 422.9965 L
350.696 425.7805 L
f
0.456 g
350.974 426.0075 m
351.506 426.4205 L
353.697 423.6125 L
353.176 423.1875 L
350.974 426.0075 L
f
0.45 g
351.195 426.2145 m
351.727 426.6285 L
353.957 423.8235 L
353.435 423.3975 L
351.195 426.2145 L
f
0.444 g
351.491 426.4405 m
352.023 426.8555 L
354.216 424.0155 L
353.695 423.5885 L
351.491 426.4405 L
f
0.437 g
351.674 426.6105 m
352.206 427.0255 L
354.475 424.2265 L
353.955 423.7985 L
351.674 426.6105 L
f
0.431 g
351.989 426.8555 m
352.521 427.2705 L
354.753 424.4365 L
354.233 424.0085 L
351.989 426.8555 L
f
0.424 g
352.21 427.0635 m
352.742 427.4785 L
355.012 424.6475 L
354.493 424.2185 L
352.21 427.0635 L
f
0.418 g
352.469 427.2515 m
353 427.6675 L
355.27 424.8015 L
354.752 424.3725 L
352.469 427.2515 L
f
0.411 g
352.727 427.4215 m
353.258 427.8375 L
355.529 425.0125 L
355.012 424.5825 L
352.727 427.4215 L
f
0.405 g
352.986 427.7045 m
353.516 428.1205 L
355.788 425.2225 L
355.272 424.7915 L
352.986 427.7045 L
f
0.399 g
353.207 427.8735 m
353.737 428.2915 L
356.048 425.4335 L
355.532 425.0015 L
353.207 427.8735 L
f
0.392 g
353.484 428.1005 m
354.014 428.5175 L
356.307 425.6255 L
355.791 425.1925 L
353.484 428.1005 L
f
0.386 g
353.743 428.2885 m
354.273 428.7065 L
356.584 425.8175 L
356.07 425.3845 L
353.743 428.2885 L
f
0.379 g
354.001 428.5335 m
354.531 428.9515 L
356.844 426.0275 L
356.33 425.5945 L
354.001 428.5335 L
f
0.373 g
354.241 428.7225 m
354.77 429.1405 l
357.083 426.2565 L
356.57 425.8225 L
354.241 428.7225 L
f
0.366 g
354.537 428.9295 m
355.066 429.3485 L
357.343 426.4675 L
356.83 426.0325 L
354.537 428.9295 L
f
0.36 g
354.758 429.1375 m
355.287 429.5565 L
357.602 426.6775 L
357.09 426.2425 L
354.758 429.1375 L
f
0.354 g
355.017 429.3445 m
355.545 429.7645 L
357.861 426.8885 L
357.349 426.4525 L
355.017 429.3445 L
f
0.347 g
355.275 429.5895 m
355.804 430.0095 L
358.12 427.0995 L
357.609 426.6625 L
355.275 429.5895 L
f
0.341 g
355.553 429.7975 m
356.081 430.2175 L
358.398 427.3095 L
357.888 426.8715 L
355.553 429.7975 L
f
0.334 g
355.811 429.9675 m
356.339 430.3875 L
358.657 427.5205 L
358.147 427.0815 L
355.811 429.9675 L
f
0.328 g
356.07 430.2495 m
356.597 430.6705 L
358.916 427.7315 L
358.407 427.2915 L
356.07 430.2495 L
f
0.321 g
356.291 430.4195 m
356.818 430.8405 L
359.174 427.9415 L
358.666 427.5015 L
356.291 430.4195 L
f
0.315 g
356.549 430.6645 m
357.076 431.0855 L
359.433 428.1525 L
358.926 427.7115 L
356.549 430.6645 L
f
0.308 g
356.808 430.8345 m
357.334 431.2565 L
359.693 428.3625 L
359.186 427.9215 L
356.808 430.8345 L
f
0.302 g
357.085 431.0975 m
357.611 431.5205 L
359.97 428.5925 L
359.464 428.1495 L
357.085 431.0975 L
f
0.296 g
357.269 431.2675 m
357.795 431.6905 L
360.229 428.8025 L
359.724 428.3595 L
357.269 431.2675 L
f
0.289 g
357.602 431.5125 m
358.128 431.9355 L
360.489 429.0135 L
359.984 428.5695 L
357.602 431.5125 L
f
0.283 g
357.824 431.6825 m
358.349 432.1065 L
360.748 429.2235 L
360.243 428.7795 L
357.824 431.6825 L
f
0.276 g
358.12 431.9275 m
358.645 432.3515 L
361.007 429.4345 L
360.503 428.9895 L
358.12 431.9275 L
f
0.27 g
358.303 432.0785 m
358.828 432.5025 L
361.265 429.6445 L
360.762 429.1995 L
358.303 432.0785 L
f
0.263 g
358.599 432.3425 m
359.124 432.7665 L
361.524 429.8555 L
361.022 429.4095 L
358.599 432.3425 L
f
0.257 g
358.82 432.5125 m
359.344 432.9375 L
361.784 430.0665 L
361.282 429.6185 L
358.82 432.5125 L
f
0.251 g
359.116 432.7575 m
359.64 433.1825 L
362.043 430.2765 L
361.542 429.8285 L
359.116 432.7575 L
f
0.244 g
359.375 432.9275 m
359.899 433.3525 L
362.302 430.4875 L
361.801 430.0385 L
359.375 432.9275 L
f
0.238 g
359.652 433.1345 m
360.251 433.5415 L
362.542 430.7545 L
362.042 430.3045 L
359.652 433.1345 L
f
0.231 g
359.977 433.2945 m
360.5 433.7205 L
362.801 430.9645 L
362.302 430.5145 L
359.977 433.2945 L
f
0.225 g
360.281 433.4935 m
360.804 433.9195 L
363.06 431.1755 L
362.561 430.7245 L
360.281 433.4935 L
f
0.218 g
360.54 433.7005 m
361.063 434.1275 L
363.319 431.3855 L
362.821 430.9345 L
360.54 433.7005 L
f
0.212 g
360.799 433.9085 m
361.321 434.3355 L
363.578 431.5965 L
363.081 431.1445 L
360.799 433.9085 L
f
0.205 g
361.095 434.1345 m
361.617 434.4865 L
363.837 431.8075 L
363.341 431.3545 L
361.095 434.1345 L
f
0.199 g
361.316 434.3045 m
361.894 434.6945 L
364.096 432.0175 L
363.6 431.5645 L
361.316 434.3045 L
f
0.193 g
361.631 434.4935 m
362.152 434.9215 L
364.336 432.2285 L
363.841 431.7745 L
361.631 434.4935 L
f
0.186 g
361.908 434.6635 m
362.429 435.0915 L
364.595 432.4395 L
364.101 431.9835 L
361.908 434.6635 L
f
0.18 g
362.167 434.8705 m
362.688 435.2995 L
364.836 432.6685 L
364.342 432.2125 L
362.167 434.8705 L
f
0.173 g
362.425 435.0595 m
362.946 435.4885 L
365.113 432.8785 L
364.62 432.4225 L
362.425 435.0595 L
f
0.167 g
362.684 435.2665 m
363.204 435.6955 L
365.316 433.0335 L
364.823 432.5755 L
362.684 435.2665 L
f
0.16 g
362.942 435.4555 m
363.462 435.8845 L
365.594 433.2815 L
365.102 432.8235 L
362.942 435.4555 L
f
0.154 g
363.22 435.6815 m
363.739 436.1115 L
365.834 433.4735 L
365.343 433.0145 L
363.22 435.6815 L
f
0.148 g
363.459 435.8885 m
363.979 436.3195 L
366.093 433.7775 L
365.603 433.3185 L
363.459 435.8885 L
f
0.141 g
363.737 436.0965 m
364.256 436.5275 L
366.315 433.9505 L
365.825 433.4905 L
363.737 436.0965 L
f
0.135 g
363.958 436.3225 m
364.477 436.7535 L
366.63 434.1615 L
366.141 433.7005 L
363.958 436.3225 L
f
0.128 g
364.254 436.5295 m
364.772 436.9615 L
366.851 434.3715 L
366.363 433.9095 L
364.254 436.5295 L
f
0.122 g
364.493 436.7375 m
365.012 437.1695 L
367.129 434.6195 L
366.641 434.1575 L
364.493 436.7375 L
f
0.115 g
364.752 436.9075 m
365.27 437.3395 L
367.37 434.8115 L
366.882 434.3485 L
364.752 436.9075 L
f
0.109 g
365.029 437.1145 m
365.547 437.5475 L
367.629 435.0405 L
367.142 434.5775 L
365.029 437.1145 L
f
0.103 g
365.288 437.3225 m
365.806 437.7545 L
367.869 435.2705 L
367.383 434.8055 L
365.288 437.3225 L
f
0.096 g
365.547 437.5295 m
366.064 437.9625 L
368.128 435.5185 L
367.643 435.0535 L
365.547 437.5295 L
f
0.09 g
365.805 437.7375 m
366.322 438.1705 L
368.387 435.7105 L
367.902 435.2445 L
365.805 437.7375 L
f
0.083 g
366.064 437.9635 m
366.581 438.3975 L
368.627 435.9205 L
368.143 435.4545 L
366.064 437.9635 L
f
0.077 g
366.322 438.1705 m
366.839 438.6045 L
368.886 436.1685 L
368.403 435.7015 L
366.322 438.1705 L
f
0.07 g
366.562 438.3965 m
367.078 438.8315 L
369.126 436.3795 L
368.644 435.9115 L
366.562 438.3965 L
f
0.064 g
366.82 438.6225 m
367.337 439.0575 L
369.367 436.6275 L
368.884 436.1585 L
366.82 438.6225 L
f
0.057 g
367.06 438.8305 m
367.576 439.2655 L
369.626 436.8385 L
369.144 436.3685 L
367.06 438.8305 L
f
0.051 g
367.319 439.0565 m
367.853 439.4735 L
369.754 437.2175 L
369.273 436.7475 L
367.319 439.0565 L
f
0.045 g
367.578 439.2825 m
368.093 439.7185 L
370.107 437.2965 L
369.626 436.8265 L
367.578 439.2825 L
f
0.038 g
367.836 439.4905 m
368.351 439.9265 L
370.403 437.5455 L
369.905 437.0735 L
367.836 439.4905 L
f
0.032 g
368.057 439.6975 m
368.59 440.1155 L
370.606 437.7555 L
370.126 437.2645 L
368.057 439.6975 L
f
0.025 g
368.315 439.9045 m
368.83 440.3415 L
370.827 437.9475 L
370.386 437.4745 L
368.315 439.9045 L
f
0.019 g
368.555 440.1125 m
369.069 440.5685 L
371.124 438.1955 L
370.646 437.7215 L
368.555 440.1125 L
f
0.012 g
368.814 440.3385 m
369.29 440.8325 L
371.345 438.4245 L
370.831 437.8945 L
368.814 440.3385 L
f
0.006 g
369.035 440.6025 m
369.549 441.0405 L
371.604 438.6545 L
371.09 438.2165 L
369.035 440.6025 L
f
u
0 g
371.826 438.9025 m
369.807 441.2485 L
369.294 440.8095 L
371.35 438.4265 L
371.826 438.9025 L
f
370.431 440.0385 m
F
U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
