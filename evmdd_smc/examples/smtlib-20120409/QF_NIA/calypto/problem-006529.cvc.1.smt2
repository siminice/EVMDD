(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Int)
(declare-fun P_5 () Int)
(declare-fun P_6 () Int)
(declare-fun P_7 () Int)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(declare-fun P_10 () Int)
(declare-fun P_11 () Int)
(declare-fun P_12 () Int)
(declare-fun P_13 () Int)
(declare-fun P_14 () Int)
(declare-fun P_15 () Int)
(declare-fun P_16 () Int)
(declare-fun P_17 () Int)
(declare-fun P_18 () Int)
(declare-fun P_19 () Int)
(declare-fun P_20 () Int)
(assert (<= 0 P_4))
(assert (<= P_4 255))
(assert (<= 0 P_5))
(assert (<= P_5 255))
(assert (<= 0 P_6))
(assert (<= P_6 255))
(assert (<= 0 P_7))
(assert (<= P_7 255))
(assert (<= 0 P_10))
(assert (<= P_10 255))
(assert (<= 0 P_11))
(assert (<= P_11 255))
(assert (<= 0 P_12))
(assert (<= P_12 255))
(assert (<= 0 P_13))
(assert (<= P_13 255))
(assert (<= 0 P_14))
(assert (<= P_14 255))
(assert (<= 0 P_15))
(assert (<= P_15 255))
(assert (<= 0 P_16))
(assert (<= P_16 255))
(assert (<= 0 P_17))
(assert (<= P_17 255))
(assert (<= 0 P_18))
(assert (<= P_18 255))
(assert (<= 0 P_19))
(assert (<= P_19 255))
(assert (<= 0 P_20))
(assert (<= P_20 255))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_1 (ite (not P_2) (ite (not P_3) 2 1) 0)) (?v_2 (ite (not P_8) (ite (not P_9) 2 1) 0)) (?v_3 (+ (- P_10 P_11) (* P_10 P_12)))) (let ((?v_8 (= ?v_2 2)) (?v_7 (= ?v_2 1)) (?v_6 (= ?v_2 0))) (let ((?v_10 (ite ?v_6 ?v_3 (ite ?v_7 ?v_3 (ite ?v_8 (* (- P_13 P_14) P_12) P_15)))) (?v_5 (= ?v_1 2)) (?v_4 (= ?v_1 1)) (?v_0 (= ?v_1 0)) (?v_11 (ite ?v_6 P_18 (ite ?v_7 P_18 (ite ?v_8 (* P_11 P_19) P_20))))) (let ((?v_9 (+ (ite ?v_0 P_4 (ite ?v_4 P_4 (ite ?v_5 (* (- P_5 P_6) P_7) ?v_10))) (ite ?v_0 P_16 (ite ?v_4 P_16 (ite ?v_5 P_17 ?v_11)))))) (= (+ (* 256 dz) rz) (- (ite ?v_0 ?v_9 (ite ?v_4 ?v_9 (ite ?v_5 ?v_9 (+ ?v_10 ?v_11)))) ?v_9)))))))
(assert (> rz 0))
(assert (< rz 256))
(check-sat)
(exit)
