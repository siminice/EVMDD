(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Int)
(declare-fun P_5 () Int)
(assert (<= 0 P_4))
(assert (<= P_4 65535))
(assert (<= 0 P_5))
(assert (<= P_5 65535))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (not P_2))) (let ((?v_1 (not (ite ?v_0 P_3 false))) (?v_2 (ite (not P_3) P_4 P_5))) (= (+ (* 65536 dz) rz) (- (ite ?v_1 0 (ite ?v_0 (* P_5 P_5) 0)) (ite ?v_1 0 (ite ?v_0 (* ?v_2 ?v_2) 0)))))))
(assert (> rz 0))
(assert (< rz 65536))
(check-sat)
(exit)
