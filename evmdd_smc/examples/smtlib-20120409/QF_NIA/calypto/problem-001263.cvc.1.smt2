(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(declare-fun P_10 () Bool)
(declare-fun P_11 () Bool)
(declare-fun P_12 () Bool)
(declare-fun P_13 () Bool)
(declare-fun P_14 () Bool)
(declare-fun P_15 () Bool)
(declare-fun P_16 () Bool)
(declare-fun P_17 () Int)
(declare-fun P_18 () Int)
(declare-fun P_19 () Int)
(declare-fun P_20 () Int)
(declare-fun P_21 () Bool)
(declare-fun P_22 () Int)
(declare-fun P_23 () Int)
(assert (<= 0 P_17))
(assert (<= P_17 255))
(assert (<= 0 P_18))
(assert (<= P_18 255))
(assert (<= 0 P_19))
(assert (<= P_19 255))
(assert (<= 0 P_20))
(assert (<= P_20 255))
(assert (<= 0 P_22))
(assert (<= P_22 255))
(assert (<= 0 P_23))
(assert (<= P_23 255))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (- (* P_17 (+ (- P_18 P_19) P_17)) P_20)) (?v_1 (- (+ P_17 (- (* P_22 P_17) P_18)) P_23)) (?v_3 (ite P_2 16384 0)) (?v_4 (ite P_3 8192 0)) (?v_5 (ite P_4 4096 0)) (?v_6 (ite P_5 2048 0)) (?v_7 (ite P_6 1024 0)) (?v_8 (ite P_7 512 0)) (?v_9 (ite P_8 256 0)) (?v_10 (ite P_9 128 0)) (?v_11 (ite P_10 64 0)) (?v_12 (ite P_11 32 0)) (?v_13 (ite P_12 16 0)) (?v_14 (ite P_13 8 0)) (?v_15 (ite P_14 4 0)) (?v_16 (ite P_15 2 0)) (?v_2 (- (+ (ite P_16 1 0) 1) 2))) (let ((?v_17 (+ (ite (not (not (= (+ ?v_3 (+ ?v_4 (+ ?v_5 (+ ?v_6 (+ ?v_7 (+ ?v_8 (+ ?v_9 (+ ?v_10 (+ ?v_11 (+ ?v_12 (+ ?v_13 (+ ?v_14 (+ ?v_15 (+ ?v_16 (ite P_21 1 0))))))))))))))) 0))) (* ?v_1 ?v_1) 0) ?v_1))) (= (+ (* 256 dz) rz) (- (ite (not P_2) (ite (not P_3) (ite (not P_4) (ite (not P_5) (ite (not P_6) (ite (not P_7) (ite (not P_8) (ite (not P_9) (ite (not P_10) (ite (not P_11) (ite (not P_12) (ite (not P_13) (ite (not P_14) (ite (not P_15) (ite (not P_21) ?v_0 (+ (* ?v_0 ?v_1) ?v_1)) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) ?v_0) (ite (not (not (= (+ ?v_3 (+ ?v_4 (+ ?v_5 (+ ?v_6 (+ ?v_7 (+ ?v_8 (+ ?v_9 (+ ?v_10 (+ ?v_11 (+ ?v_12 (+ ?v_13 (+ ?v_14 (+ ?v_15 (+ ?v_16 (ite (>= ?v_2 0) ?v_2 (+ ?v_2 2)))))))))))))))) 0))) (+ (* ?v_0 ?v_17) ?v_17) ?v_0))))))
(assert (> rz 0))
(assert (< rz 256))
(check-sat)
(exit)
