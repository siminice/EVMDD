(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Int)
(declare-fun P_3 () Int)
(declare-fun P_4 () Int)
(declare-fun P_5 () Int)
(assert (<= (* 255 (- 1)) P_2))
(assert (<= P_2 255))
(assert (<= (* 128 (- 1)) P_3))
(assert (<= P_3 127))
(assert (<= (* 128 (- 1)) P_4))
(assert (<= P_4 127))
(assert (<= 0 P_5))
(assert (<= P_5 255))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (not (< P_2 0)))) (let ((?v_1 (ite (not ?v_0) P_3 P_4))) (let ((?v_2 (* (ite (>= ?v_1 0) ?v_1 (+ ?v_1 256)) P_5))) (let ((?v_3 (ite ?v_0 ?v_2 (- ?v_2)))) (= (+ (* 131072 dz) rz) (- (ite (not (not (< ?v_3 0))) (- ?v_3) ?v_3) ?v_2)))))))
(assert (> rz 0))
(assert (< rz 131072))
(check-sat)
(exit)
