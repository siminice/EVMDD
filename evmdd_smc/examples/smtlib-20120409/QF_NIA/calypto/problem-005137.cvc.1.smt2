(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Int)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Int)
(declare-fun P_6 () Int)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Int)
(assert (<= 0 P_2))
(assert (<= P_2 15))
(assert (<= 0 P_5))
(assert (<= P_5 3))
(assert (<= 0 P_6))
(assert (<= P_6 15))
(assert (<= 0 P_9))
(assert (<= P_9 3))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (< (ite (< P_2 8) P_2 (- P_2 16)) 0))) (let ((?v_1 (ite (not (or (and (not ?v_0) P_3) (and ?v_0 P_4))) (* P_5 16) 0)) (?v_2 (< (ite (< P_6 8) P_6 (- P_6 16)) 0))) (let ((?v_3 (ite (not (or (and (not ?v_2) P_7) (and ?v_2 P_8))) (* P_9 16) 0))) (let ((?v_4 (* (ite (< ?v_1 32) ?v_1 (- ?v_1 64)) (ite (< ?v_3 32) ?v_3 (- ?v_3 64))))) (= (+ (* 4294967296 dz) rz) (- ?v_4 (ite (>= ?v_4 0) ?v_4 (+ ?v_4 4096)))))))))
(assert (> rz 0))
(assert (< rz 4294967296))
(check-sat)
(exit)
