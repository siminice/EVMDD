(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Int)
(declare-fun P_3 () Int)
(declare-fun P_4 () Int)
(assert (<= 0 P_2))
(assert (<= P_2 8589934591))
(assert (<= 0 P_3))
(assert (<= P_3 131071))
(assert (<= 0 P_4))
(assert (<= P_4 65535))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (ite (< P_2 4294967296) P_2 (- P_2 8589934592))) (?v_1 (+ (* P_3 65536) P_4))) (= (+ (* 18446744073709551616 dz) rz) (- (+ (* (* ?v_0 (ite (< P_3 65536) P_3 (- P_3 131072))) 65536) (* ?v_0 P_4)) (* ?v_0 (ite (< ?v_1 4294967296) ?v_1 (- ?v_1 8589934592)))))))
(assert (> rz 0))
(assert (< rz 18446744073709551616))
(check-sat)
(exit)
