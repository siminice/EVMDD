(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Int)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Int)
(assert (<= (* 2 (- 1)) P_4))
(assert (<= P_4 1))
(assert (<= (* 2 (- 1)) P_7))
(assert (<= P_7 1))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (* (ite (not (or P_2 P_3)) (* P_4 16) 0) (ite (not (or P_5 P_6)) (* P_7 16) 0)))) (= (+ (* 4294967296 dz) rz) (- ?v_0 (ite (>= ?v_0 0) ?v_0 (+ ?v_0 4096))))))
(assert (> rz 0))
(assert (< rz 4294967296))
(check-sat)
(exit)
