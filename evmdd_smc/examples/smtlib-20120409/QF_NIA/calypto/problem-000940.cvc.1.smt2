(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Int)
(declare-fun P_4 () Int)
(declare-fun P_5 () Int)
(declare-fun P_6 () Int)
(declare-fun P_7 () Int)
(declare-fun P_8 () Int)
(declare-fun P_9 () Int)
(assert (<= 0 P_3))
(assert (<= P_3 524287))
(assert (<= 0 P_4))
(assert (<= P_4 131071))
(assert (<= 0 P_5))
(assert (<= P_5 255))
(assert (<= 0 P_6))
(assert (<= P_6 255))
(assert (<= 0 P_7))
(assert (<= P_7 255))
(assert (<= 0 P_8))
(assert (<= P_8 255))
(assert (<= 0 P_9))
(assert (<= P_9 255))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (ite (< P_4 65536) P_4 (- P_4 131072)))) (let ((?v_1 (+ (+ (+ (+ (ite (< P_3 262144) P_3 (- P_3 524288)) ?v_0) ?v_0) (* P_5 (- P_6 P_7))) (* P_8 (- P_9 P_7))))) (let ((?v_2 (ite (not P_2) ?v_1 (* ?v_1 2)))) (let ((?v_3 (ite (not (not (< ?v_2 0))) (- ?v_2) ?v_2))) (= (+ (* 16777216 dz) rz) (- ?v_3 (ite (>= ?v_3 0) ?v_3 (+ ?v_3 2097152)))))))))
(assert (> rz 0))
(assert (< rz 16777216))
(check-sat)
(exit)
